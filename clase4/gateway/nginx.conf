worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Upstream para el servicio de posts
    upstream posts_api {
        server service1:5000; # Nombre del servicio Docker Compose y su puerto
    }

    # Upstream para el servicio frontend
    upstream frontend_service {
        server frontend:80; # Nombre del servicio Docker Compose y su puerto
    }

    server {
        listen 8080; # Puerto de escucha del gateway

        # Endpoint de salud del gateway
        location /gateway/health {
            add_header Content-Type text/plain;
            return 200 'Gateway is UP and running!';
        }

        # Rutear /api/* a la API de Posts
        location /api/ {
            proxy_pass http://posts_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Rutear / a el frontend (HTML est√°tico)
        location / {
            proxy_pass http://frontend_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}